// <auto-generated />
using System;
using ContaBancaria.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContaBancaria.Data.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20220619220806_ContaBancaria.1")]
    partial class ContaBancaria1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.Banco", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GUID");

                    b.Property<int>("Agencia")
                        .HasColumnName("AGENCIA")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Numero")
                        .HasColumnName("NUMERO")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.ToTable("BANCO");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("20ef055c-2f7a-4995-83ee-4555207e0608"),
                            Agencia = 11111,
                            Nome = "Banco",
                            Numero = 1
                        });
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.Conta", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GUID");

                    b.Property<Guid>("GuidBanco")
                        .HasColumnName("GUID_BANCO");

                    b.Property<long>("Numero")
                        .HasColumnName("NUMERO")
                        .HasColumnType("bigint");

                    b.HasKey("Guid");

                    b.HasIndex("GuidBanco");

                    b.ToTable("CONTA");
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.ExtratoConta", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GUID");

                    b.Property<DateTime>("DataOperacao")
                        .HasColumnName("DATA_OPERACAO")
                        .HasColumnType("datetime");

                    b.Property<Guid>("GuidConta")
                        .HasColumnName("GUID_CONTA");

                    b.Property<Guid>("GuidContaOrigem")
                        .HasColumnName("GUID_CONTA_ORIGEM");

                    b.Property<byte>("TipoOperacao")
                        .HasColumnName("TIPO_OPERACAO");

                    b.Property<byte?>("TipoTaxaBancaria")
                        .HasColumnName("TIPO_TAXA_BANCARIA");

                    b.Property<decimal>("Valor")
                        .HasColumnName("VALOR")
                        .HasColumnType("money");

                    b.HasKey("Guid");

                    b.HasIndex("GuidConta");

                    b.ToTable("EXTRATO_CONTA");
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.TaxaBancaria", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GUID");

                    b.Property<string>("Descricao")
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("GuidBanco")
                        .HasColumnName("GUID_BANCO");

                    b.Property<byte?>("Tipo")
                        .HasColumnName("TIPO");

                    b.Property<byte>("TipoValor")
                        .HasColumnName("TIPO_VALOR");

                    b.Property<decimal>("Valor")
                        .HasColumnName("VALOR")
                        .HasColumnType("numeric");

                    b.HasKey("Guid");

                    b.HasIndex("GuidBanco");

                    b.ToTable("TAXA_BANCARIA");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("9490fa28-66a8-4bf1-b8c1-1e80f83d14fd"),
                            Descricao = "1%",
                            GuidBanco = new Guid("20ef055c-2f7a-4995-83ee-4555207e0608"),
                            Tipo = (byte)2,
                            TipoValor = (byte)1,
                            Valor = 1m
                        },
                        new
                        {
                            Guid = new Guid("fc056d11-ed57-4b2a-a371-f66fe38ba496"),
                            Descricao = "R$ 4",
                            GuidBanco = new Guid("20ef055c-2f7a-4995-83ee-4555207e0608"),
                            Tipo = (byte)1,
                            TipoValor = (byte)2,
                            Valor = 4m
                        },
                        new
                        {
                            Guid = new Guid("57574877-3562-4d83-ac69-9e40aadfa5d9"),
                            Descricao = "R$ 1",
                            GuidBanco = new Guid("20ef055c-2f7a-4995-83ee-4555207e0608"),
                            Tipo = (byte)3,
                            TipoValor = (byte)2,
                            Valor = 1m
                        });
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GUID");

                    b.Property<string>("Autorizacao")
                        .HasColumnName("AUTORIZACAO")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Login")
                        .HasColumnName("LOGIN")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Senha")
                        .HasColumnName("SENHA")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Guid");

                    b.ToTable("USUARIO");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("9c0ff412-3496-431c-a89c-22982030cfa4"),
                            Autorizacao = "Conta",
                            Login = "conta",
                            Senha = "7C4A8D09CA3762AF61E59520943DC26494F8941B"
                        },
                        new
                        {
                            Guid = new Guid("644e3a32-7d67-4bd4-b08e-e21338b9f7c6"),
                            Autorizacao = "Banco",
                            Login = "banco",
                            Senha = "7C4A8D09CA3762AF61E59520943DC26494F8941B"
                        },
                        new
                        {
                            Guid = new Guid("9315a43d-bc8d-4a45-8050-641a033983df"),
                            Autorizacao = "BancoCentral",
                            Login = "central",
                            Senha = "7C4A8D09CA3762AF61E59520943DC26494F8941B"
                        },
                        new
                        {
                            Guid = new Guid("56b5df15-b978-4c17-86ee-09cc4047e417"),
                            Autorizacao = "Adm",
                            Login = "adm",
                            Senha = "7C4A8D09CA3762AF61E59520943DC26494F8941B"
                        });
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.Conta", b =>
                {
                    b.HasOne("ContaBancaria.Dominio.Entidades.Banco", "Banco")
                        .WithMany("Contas")
                        .HasForeignKey("GuidBanco")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.ExtratoConta", b =>
                {
                    b.HasOne("ContaBancaria.Dominio.Entidades.Conta", "Conta")
                        .WithMany("Extrato")
                        .HasForeignKey("GuidConta")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.TaxaBancaria", b =>
                {
                    b.HasOne("ContaBancaria.Dominio.Entidades.Banco", "Banco")
                        .WithMany("TaxasBancarias")
                        .HasForeignKey("GuidBanco")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
