// <auto-generated />
using System;
using ContaBancaria.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContaBancaria.Data.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20220620190016_ContaBancaria.2")]
    partial class ContaBancaria2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.Banco", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GUID");

                    b.Property<int>("Agencia")
                        .HasColumnName("AGENCIA")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Numero")
                        .HasColumnName("NUMERO")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.ToTable("BANCO");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("f1efd866-934e-4337-bd2c-756f0885139b"),
                            Agencia = 11111,
                            Nome = "Banco",
                            Numero = 1
                        });
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.Conta", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GUID");

                    b.Property<Guid>("GuidBanco")
                        .HasColumnName("GUID_BANCO");

                    b.Property<long>("Numero")
                        .HasColumnName("NUMERO")
                        .HasColumnType("bigint");

                    b.HasKey("Guid");

                    b.HasIndex("GuidBanco");

                    b.ToTable("CONTA");
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.ExtratoConta", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GUID");

                    b.Property<DateTime>("DataOperacao")
                        .HasColumnName("DATA_OPERACAO")
                        .HasColumnType("datetime");

                    b.Property<Guid>("GuidConta")
                        .HasColumnName("GUID_CONTA");

                    b.Property<Guid>("GuidContaOrigem")
                        .HasColumnName("GUID_CONTA_ORIGEM");

                    b.Property<byte>("TipoOperacao")
                        .HasColumnName("TIPO_OPERACAO");

                    b.Property<byte?>("TipoTaxaBancaria")
                        .HasColumnName("TIPO_TAXA_BANCARIA");

                    b.Property<decimal>("Valor")
                        .HasColumnName("VALOR")
                        .HasColumnType("money");

                    b.HasKey("Guid");

                    b.HasIndex("GuidConta");

                    b.ToTable("EXTRATO_CONTA");
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.FilaProcessamento", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GUID");

                    b.Property<string>("Dados")
                        .IsRequired()
                        .HasColumnName("DADOS")
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("DataGeracao")
                        .HasColumnName("DATA_GERACAO")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataProcessamento")
                        .HasColumnName("DATA_PROCESSAMENTO")
                        .HasColumnType("datetime");

                    b.Property<byte>("Situacao")
                        .HasColumnName("SITUACAO");

                    b.Property<byte>("TipoComandoFila")
                        .HasColumnName("TIPO_COMANDO_FILA");

                    b.HasKey("Guid");

                    b.ToTable("FILA_PROCESSAMENTO");
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.TaxaBancaria", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GUID");

                    b.Property<string>("Descricao")
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("GuidBanco")
                        .HasColumnName("GUID_BANCO");

                    b.Property<byte?>("Tipo")
                        .HasColumnName("TIPO");

                    b.Property<byte>("TipoValor")
                        .HasColumnName("TIPO_VALOR");

                    b.Property<decimal>("Valor")
                        .HasColumnName("VALOR")
                        .HasColumnType("numeric");

                    b.HasKey("Guid");

                    b.HasIndex("GuidBanco");

                    b.ToTable("TAXA_BANCARIA");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("a2b30a0f-a97e-4f3d-b6ac-88a4378e3cf1"),
                            Descricao = "1%",
                            GuidBanco = new Guid("f1efd866-934e-4337-bd2c-756f0885139b"),
                            Tipo = (byte)2,
                            TipoValor = (byte)1,
                            Valor = 1m
                        },
                        new
                        {
                            Guid = new Guid("1fba310f-2137-436e-9917-9c91071a8f20"),
                            Descricao = "R$ 4",
                            GuidBanco = new Guid("f1efd866-934e-4337-bd2c-756f0885139b"),
                            Tipo = (byte)1,
                            TipoValor = (byte)2,
                            Valor = 4m
                        },
                        new
                        {
                            Guid = new Guid("057e97d1-c753-4d9a-b056-c619e96ea9e0"),
                            Descricao = "R$ 1",
                            GuidBanco = new Guid("f1efd866-934e-4337-bd2c-756f0885139b"),
                            Tipo = (byte)3,
                            TipoValor = (byte)2,
                            Valor = 1m
                        });
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GUID");

                    b.Property<string>("Autorizacao")
                        .HasColumnName("AUTORIZACAO")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Login")
                        .HasColumnName("LOGIN")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Senha")
                        .HasColumnName("SENHA")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Guid");

                    b.ToTable("USUARIO");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("b856bcdb-c0b1-460a-b4bb-bcdf5b7f1cb1"),
                            Autorizacao = "Conta",
                            Login = "conta",
                            Senha = "7C4A8D09CA3762AF61E59520943DC26494F8941B"
                        },
                        new
                        {
                            Guid = new Guid("9dacd231-9a24-4ba8-841f-d588214a2c82"),
                            Autorizacao = "Banco",
                            Login = "banco",
                            Senha = "7C4A8D09CA3762AF61E59520943DC26494F8941B"
                        },
                        new
                        {
                            Guid = new Guid("b53fc76d-5ac1-405c-b53f-9c54bbf4e988"),
                            Autorizacao = "BancoCentral",
                            Login = "central",
                            Senha = "7C4A8D09CA3762AF61E59520943DC26494F8941B"
                        },
                        new
                        {
                            Guid = new Guid("ccdc7bcf-ab59-4e93-8491-0ab11857156b"),
                            Autorizacao = "Adm",
                            Login = "adm",
                            Senha = "7C4A8D09CA3762AF61E59520943DC26494F8941B"
                        });
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.Conta", b =>
                {
                    b.HasOne("ContaBancaria.Dominio.Entidades.Banco", "Banco")
                        .WithMany("Contas")
                        .HasForeignKey("GuidBanco")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.ExtratoConta", b =>
                {
                    b.HasOne("ContaBancaria.Dominio.Entidades.Conta", "Conta")
                        .WithMany("Extrato")
                        .HasForeignKey("GuidConta")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.TaxaBancaria", b =>
                {
                    b.HasOne("ContaBancaria.Dominio.Entidades.Banco", "Banco")
                        .WithMany("TaxasBancarias")
                        .HasForeignKey("GuidBanco")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
