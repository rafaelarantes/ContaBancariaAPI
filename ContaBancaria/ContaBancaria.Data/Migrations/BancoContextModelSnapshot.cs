// <auto-generated />
using System;
using ContaBancaria.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContaBancaria.Data.Migrations
{
    [DbContext(typeof(BancoContext))]
    partial class BancoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.Banco", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GUID");

                    b.Property<int>("Agencia")
                        .HasColumnName("AGENCIA")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Numero")
                        .HasColumnName("NUMERO")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.ToTable("BANCO");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("3cac4d99-6d48-4508-b06c-8ce9c5489124"),
                            Agencia = 11111,
                            Nome = "Banco",
                            Numero = 1
                        });
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.Conta", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GUID");

                    b.Property<Guid>("GuidBanco")
                        .HasColumnName("GUID_BANCO");

                    b.Property<long>("Numero")
                        .HasColumnName("NUMERO")
                        .HasColumnType("bigint");

                    b.HasKey("Guid");

                    b.HasIndex("GuidBanco");

                    b.ToTable("CONTA");
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.ExtratoConta", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GUID");

                    b.Property<DateTime>("DataOperacao")
                        .HasColumnName("DATA_OPERACAO")
                        .HasColumnType("datetime");

                    b.Property<Guid>("GuidConta")
                        .HasColumnName("GUID_CONTA");

                    b.Property<Guid>("GuidContaOrigem")
                        .HasColumnName("GUID_CONTA_ORIGEM");

                    b.Property<byte>("TipoOperacao")
                        .HasColumnName("TIPO_OPERACAO");

                    b.Property<byte?>("TipoTaxaBancaria")
                        .HasColumnName("TIPO_TAXA_BANCARIA");

                    b.Property<decimal>("Valor")
                        .HasColumnName("VALOR")
                        .HasColumnType("money");

                    b.HasKey("Guid");

                    b.HasIndex("GuidConta");

                    b.ToTable("EXTRATO_CONTA");
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.TaxaBancaria", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GUID");

                    b.Property<string>("Descricao")
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("GuidBanco")
                        .HasColumnName("GUID_BANCO");

                    b.Property<byte?>("Tipo")
                        .HasColumnName("TIPO");

                    b.Property<byte>("TipoValor")
                        .HasColumnName("TIPO_VALOR");

                    b.Property<decimal>("Valor")
                        .HasColumnName("VALOR")
                        .HasColumnType("numeric");

                    b.HasKey("Guid");

                    b.HasIndex("GuidBanco");

                    b.ToTable("TAXA_BANCARIA");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("477e1d1e-2f1c-4f36-b929-934e14919081"),
                            Descricao = "1%",
                            GuidBanco = new Guid("3cac4d99-6d48-4508-b06c-8ce9c5489124"),
                            Tipo = (byte)2,
                            TipoValor = (byte)1,
                            Valor = 1m
                        },
                        new
                        {
                            Guid = new Guid("d29704e6-0f38-4780-8026-3f9e74119729"),
                            Descricao = "R$ 4",
                            GuidBanco = new Guid("3cac4d99-6d48-4508-b06c-8ce9c5489124"),
                            Tipo = (byte)1,
                            TipoValor = (byte)2,
                            Valor = 4m
                        },
                        new
                        {
                            Guid = new Guid("a8cd00b0-ee69-48c6-8166-e907f68b696b"),
                            Descricao = "R$ 1",
                            GuidBanco = new Guid("3cac4d99-6d48-4508-b06c-8ce9c5489124"),
                            Tipo = (byte)3,
                            TipoValor = (byte)2,
                            Valor = 1m
                        });
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.Conta", b =>
                {
                    b.HasOne("ContaBancaria.Dominio.Entidades.Banco", "Banco")
                        .WithMany("Contas")
                        .HasForeignKey("GuidBanco")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.ExtratoConta", b =>
                {
                    b.HasOne("ContaBancaria.Dominio.Entidades.Conta", "Conta")
                        .WithMany("Extrato")
                        .HasForeignKey("GuidConta")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ContaBancaria.Dominio.Entidades.TaxaBancaria", b =>
                {
                    b.HasOne("ContaBancaria.Dominio.Entidades.Banco", "Banco")
                        .WithMany("TaxasBancarias")
                        .HasForeignKey("GuidBanco")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
